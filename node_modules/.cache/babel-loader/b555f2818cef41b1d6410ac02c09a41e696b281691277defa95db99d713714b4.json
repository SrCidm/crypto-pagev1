{"ast":null,"code":"// import React, { useContext, useEffect, useState } from 'react'\n// import { CoinList } from '../config/api';\n// import { Cripto } from '../ContextCripto';\n// import {\n//     Container,\n//     LinearProgress,\n//     Pagination,\n//     Table, TableBody,\n//     TableCell, TableContainer,\n//     TableHead, TableRow,\n//     TextField, ThemeProvider,\n//     Typography, createTheme,\n// } from '@mui/material';\n// import { makeStyles } from '@mui/styles';\n// import { useNavigate } from 'react-router-dom';\n\n// const useStyles = makeStyles(() => ({\n//     row: {\n//         backgroundColor: \"#14161a\",\n//         cursor: \"pointer\",\n//         \"&:hover\": {\n//             backgroundColor: \"#131111\",\n//         },\n//         fontFamily: \"monospace\",\n//         fontWeight:\"bold\",\n//     },\n//     pagination: {\n//         \"& .MuiPaginationItem-root\": {\n//             color:\"rgb(0, 150, 250)\"\n//         }\n//     }\n// }))\n\n// const CoinsTable = () => {\n//     const navigate = useNavigate();\n//     const [coins, setCoins] = useState([]);\n//     const [loading, setLoading] = useState(false);\n//     const { currency,symbol } = useContext(Cripto);\n//     const [search, setSearch] = useState(\"\");\n//     const [page, setPage] = useState(1);\n\n//     const fetchCoins = async () => {\n//         setLoading(true);\n//         const response = await fetch(CoinList(currency));\n//         const  data  = await response.json();\n\n//         setCoins(data.Data);\n//         setLoading(false);\n\n//     };\n\n//     console.log(coins);\n\n//     useEffect(() => {\n//         fetchCoins();\n//         // eslint-disable-next-line\n//     }, [currency])\n\n//     const darkTheme = createTheme({\n//         palette: {\n//           mode: \"dark\",\n//         },\n//     });\n\n//     const handleSearch = () => {\n//         return coins.filter(\n//             (coin) =>\n//                 (coin.CoinInfo?.FullName).toLowerCase().includes(search) ||\n//                 (coin.CoinInfo?.Name).toLowerCase().includes(search)\n//         );\n//     };\n\n//     const classes = useStyles();\n\n//     return (\n//         <ThemeProvider theme={darkTheme}>\n//             <Container style={{ textAlign: \"center\" }}>\n//                 <Typography variant=\"h4\" style={{\n//                     margin: 18,\n//                     fontFamily: \"monospace\",\n//                     color: \"rgb(0, 150, 250)\",\n//                     textShadow: \"2px 1px 2px rgba(0, 0, 200, 1)\"\n//                 }}\n//                 onChange={(e)=>setSearch(e.target.value)}>\n//                     CryptoCurrency Prices by Market Cap\n//                 </Typography>\n//                 <TextField label=\"Find you Crypto Currency...\" variant=\"outlined\" style={{ marginBottom: 20, width: \"100%\" }} />\n//                 <TableContainer>\n//                     {\n//                         loading ? (\n//                             <LinearProgress style={{ background: \"rgb(0, 150, 250)\" }} />)\n//                             : (\n//                                 <Table>\n//                                     <TableHead style={{ backgroundColor: \"rgb(0, 150, 250)\"}}>\n//                                         <TableRow>\n//                                             {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\n//                                                 <TableCell\n//                                                 style={{\n//                                                     color: \"black\",\n//                                                     fontWeight: \"700\",\n//                                                     fontFamily: \"monospace\",\n//                                                 }}\n//                                                 key={head}\n//                                                 align={head === \"Coin\" ? \"\" : \"right\"}>\n//                                                 {head === \"Coin\" ? (\n//                                                     <div style={{ marginRight: \"66px\", paddingRight: \"240px\" }}>\n//                                                         {head}\n//                                                     </div>\n//                                                 ) : (\n//                                                     head\n//                                                 )}\n//                                             </TableCell>\n//                                             ))}\n//                                         </TableRow>\n\n//                                     </TableHead>\n//                                     <TableBody>\n//                                         {handleSearch().slice((page-1)*10,(page-1)*10+10).map((row) => {\n//                                             const profit = row.DISPLAY?.[currency]?.CHANGEPCTDAY > 0;\n\n//                                             return (\n//                                                 <TableRow\n//                                                     onClick={() => navigate(`/coins/${row.CoinInfo.Name}`)}\n//                                                     className={classes.row}\n//                                                     key={row.CoinInfo.Id}>\n//                                                     <TableCell component=\"th\" scrope=\"row\" style={{\n//                                                         display: \"flex\",\n//                                                         gap:15,\n//                                                     }}>\n//                                                         <img\n//                                                             src={`https://www.cryptocompare.com${row.CoinInfo.ImageUrl}`}\n//                                                             alt={row.CoinInfo.Name}\n//                                                             height=\"50\"\n//                                                             cursor=\"pointer\"\n//                                                             style={{ marginBottom: 10}}>\n//                                                         </img>\n//                                                         <div\n//                                                             style={{ display: \"flex\", flexDirection: \"column\" }}>\n//                                                             <span\n//                                                                 style={{\n//                                                                     textTransform: \"uppercase\",\n//                                                                     fontSize: 22,\n//                                                                 }}>\n//                                                                 {row.CoinInfo.Name}\n//                                                             </span>\n//                                                             <span style={{\n//                                                                 color:\"darkgrey\"\n//                                                             }}>{row.CoinInfo.FullName}\n//                                                             </span>\n//                                                         </div>\n\n//                                                     </TableCell>\n//                                                     <TableCell\n//                                                         align=\"right\" style={{fontWeight:\"bold\"}}>\n//                                                         {(symbol).replace(/[$€]/g, '')}{(row?.DISPLAY?.[currency]?.PRICE)}\n\n//                                                     </TableCell>\n//                                                     <TableCell\n//                                                         align=\"right\"\n//                                                         style={{\n//                                                             color: profit > 0 ? \"rgb(14,203,129)\" : \"red\",\n//                                                             fontWeight:\"bold\",\n//                                                         }}>\n//                                                         {profit && \"+\"}\n//                                                         {(symbol).replace(/[$€]/g, '')}{(row?.DISPLAY?.[currency]?.CHANGEPCTDAY)}%\n\n//                                                     </TableCell>\n//                                                     <TableCell align='right'>\n//                                                         {row?.DISPLAY?.[currency]?.MKTCAP}\n\n//                                                     </TableCell>\n\n//                                                 </TableRow>\n//                                             )\n//                                         })}\n//                                     </TableBody>\n//                                 </Table>\n//                             )\n//                     }\n//                 </TableContainer>\n//                 <Pagination\n//                     style={{\n//                         padding: 20,\n//                         width: \"100%\",\n//                         display: \"flex\",\n//                         justifyContent:\"center\",\n//                 }}\n//                 clases={{ul:classes.pagination}}\n//                 count={parseInt((handleSearch()?.length / 10).toFixed(0))}\n//                 onChange={(_, value)=>{\n//                     setPage(value);\n//                     window.scroll(0,450);\n//                 }}    \n//                 />\n//             </Container>\n//         </ThemeProvider>\n//     );\n// }\n\n// export default CoinsTable","map":{"version":3,"names":[],"sources":["C:/Curso/visualCodeProyectos/crypto-pagev1/crypto-pagev1/src/components/CoinsTable.js"],"sourcesContent":["// import React, { useContext, useEffect, useState } from 'react'\r\n// import { CoinList } from '../config/api';\r\n// import { Cripto } from '../ContextCripto';\r\n// import {\r\n//     Container,\r\n//     LinearProgress,\r\n//     Pagination,\r\n//     Table, TableBody,\r\n//     TableCell, TableContainer,\r\n//     TableHead, TableRow,\r\n//     TextField, ThemeProvider,\r\n//     Typography, createTheme,\r\n// } from '@mui/material';\r\n// import { makeStyles } from '@mui/styles';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles(() => ({\r\n//     row: {\r\n//         backgroundColor: \"#14161a\",\r\n//         cursor: \"pointer\",\r\n//         \"&:hover\": {\r\n//             backgroundColor: \"#131111\",\r\n//         },\r\n//         fontFamily: \"monospace\",\r\n//         fontWeight:\"bold\",\r\n//     },\r\n//     pagination: {\r\n//         \"& .MuiPaginationItem-root\": {\r\n//             color:\"rgb(0, 150, 250)\"\r\n//         }\r\n//     }\r\n// }))\r\n\r\n// const CoinsTable = () => {\r\n//     const navigate = useNavigate();\r\n//     const [coins, setCoins] = useState([]);\r\n//     const [loading, setLoading] = useState(false);\r\n//     const { currency,symbol } = useContext(Cripto);\r\n//     const [search, setSearch] = useState(\"\");\r\n//     const [page, setPage] = useState(1);\r\n    \r\n\r\n//     const fetchCoins = async () => {\r\n//         setLoading(true);\r\n//         const response = await fetch(CoinList(currency));\r\n//         const  data  = await response.json();\r\n        \r\n//         setCoins(data.Data);\r\n//         setLoading(false);\r\n\r\n\r\n//     };\r\n\r\n//     console.log(coins);\r\n\r\n//     useEffect(() => {\r\n//         fetchCoins();\r\n//         // eslint-disable-next-line\r\n//     }, [currency])\r\n    \r\n//     const darkTheme = createTheme({\r\n//         palette: {\r\n//           mode: \"dark\",\r\n//         },\r\n//     });\r\n    \r\n//     const handleSearch = () => {\r\n//         return coins.filter(\r\n//             (coin) =>\r\n//                 (coin.CoinInfo?.FullName).toLowerCase().includes(search) ||\r\n//                 (coin.CoinInfo?.Name).toLowerCase().includes(search)\r\n//         );\r\n//     };\r\n\r\n//     const classes = useStyles();\r\n    \r\n//     return (\r\n//         <ThemeProvider theme={darkTheme}>\r\n//             <Container style={{ textAlign: \"center\" }}>\r\n//                 <Typography variant=\"h4\" style={{\r\n//                     margin: 18,\r\n//                     fontFamily: \"monospace\",\r\n//                     color: \"rgb(0, 150, 250)\",\r\n//                     textShadow: \"2px 1px 2px rgba(0, 0, 200, 1)\"\r\n//                 }}\r\n//                 onChange={(e)=>setSearch(e.target.value)}>\r\n//                     CryptoCurrency Prices by Market Cap\r\n//                 </Typography>\r\n//                 <TextField label=\"Find you Crypto Currency...\" variant=\"outlined\" style={{ marginBottom: 20, width: \"100%\" }} />\r\n//                 <TableContainer>\r\n//                     {\r\n//                         loading ? (\r\n//                             <LinearProgress style={{ background: \"rgb(0, 150, 250)\" }} />)\r\n//                             : (\r\n//                                 <Table>\r\n//                                     <TableHead style={{ backgroundColor: \"rgb(0, 150, 250)\"}}>\r\n//                                         <TableRow>\r\n//                                             {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\r\n//                                                 <TableCell\r\n//                                                 style={{\r\n//                                                     color: \"black\",\r\n//                                                     fontWeight: \"700\",\r\n//                                                     fontFamily: \"monospace\",\r\n//                                                 }}\r\n//                                                 key={head}\r\n//                                                 align={head === \"Coin\" ? \"\" : \"right\"}>\r\n//                                                 {head === \"Coin\" ? (\r\n//                                                     <div style={{ marginRight: \"66px\", paddingRight: \"240px\" }}>\r\n//                                                         {head}\r\n//                                                     </div>\r\n//                                                 ) : (\r\n//                                                     head\r\n//                                                 )}\r\n//                                             </TableCell>\r\n//                                             ))}\r\n//                                         </TableRow>\r\n\r\n//                                     </TableHead>\r\n//                                     <TableBody>\r\n//                                         {handleSearch().slice((page-1)*10,(page-1)*10+10).map((row) => {\r\n//                                             const profit = row.DISPLAY?.[currency]?.CHANGEPCTDAY > 0;\r\n\r\n//                                             return (\r\n//                                                 <TableRow\r\n//                                                     onClick={() => navigate(`/coins/${row.CoinInfo.Name}`)}\r\n//                                                     className={classes.row}\r\n//                                                     key={row.CoinInfo.Id}>\r\n//                                                     <TableCell component=\"th\" scrope=\"row\" style={{\r\n//                                                         display: \"flex\",\r\n//                                                         gap:15,\r\n//                                                     }}>\r\n//                                                         <img\r\n//                                                             src={`https://www.cryptocompare.com${row.CoinInfo.ImageUrl}`}\r\n//                                                             alt={row.CoinInfo.Name}\r\n//                                                             height=\"50\"\r\n//                                                             cursor=\"pointer\"\r\n//                                                             style={{ marginBottom: 10}}>\r\n//                                                         </img>\r\n//                                                         <div\r\n//                                                             style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n//                                                             <span\r\n//                                                                 style={{\r\n//                                                                     textTransform: \"uppercase\",\r\n//                                                                     fontSize: 22,\r\n//                                                                 }}>\r\n//                                                                 {row.CoinInfo.Name}\r\n//                                                             </span>\r\n//                                                             <span style={{\r\n//                                                                 color:\"darkgrey\"\r\n//                                                             }}>{row.CoinInfo.FullName}\r\n//                                                             </span>\r\n//                                                         </div>\r\n\r\n//                                                     </TableCell>\r\n//                                                     <TableCell\r\n//                                                         align=\"right\" style={{fontWeight:\"bold\"}}>\r\n//                                                         {(symbol).replace(/[$€]/g, '')}{(row?.DISPLAY?.[currency]?.PRICE)}\r\n\r\n//                                                     </TableCell>\r\n//                                                     <TableCell\r\n//                                                         align=\"right\"\r\n//                                                         style={{\r\n//                                                             color: profit > 0 ? \"rgb(14,203,129)\" : \"red\",\r\n//                                                             fontWeight:\"bold\",\r\n//                                                         }}>\r\n//                                                         {profit && \"+\"}\r\n//                                                         {(symbol).replace(/[$€]/g, '')}{(row?.DISPLAY?.[currency]?.CHANGEPCTDAY)}%\r\n\r\n//                                                     </TableCell>\r\n//                                                     <TableCell align='right'>\r\n//                                                         {row?.DISPLAY?.[currency]?.MKTCAP}\r\n\r\n//                                                     </TableCell>\r\n\r\n//                                                 </TableRow>\r\n//                                             )\r\n//                                         })}\r\n//                                     </TableBody>\r\n//                                 </Table>\r\n//                             )\r\n//                     }\r\n//                 </TableContainer>\r\n//                 <Pagination\r\n//                     style={{\r\n//                         padding: 20,\r\n//                         width: \"100%\",\r\n//                         display: \"flex\",\r\n//                         justifyContent:\"center\",\r\n//                 }}\r\n//                 clases={{ul:classes.pagination}}\r\n//                 count={parseInt((handleSearch()?.length / 10).toFixed(0))}\r\n//                 onChange={(_, value)=>{\r\n//                     setPage(value);\r\n//                     window.scroll(0,450);\r\n//                 }}    \r\n//                 />\r\n//             </Container>\r\n//         </ThemeProvider>\r\n//     );\r\n// }\r\n\r\n// export default CoinsTable\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}