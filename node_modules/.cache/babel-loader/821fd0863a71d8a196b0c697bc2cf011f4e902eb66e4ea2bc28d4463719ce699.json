{"ast":null,"code":"var _jsxFileName = \"C:\\\\Curso\\\\visualCodeProyectos\\\\crypto-pagev1\\\\crypto-pagev1\\\\src\\\\components\\\\InfoCoin.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Cripto } from '../ContextCripto';\nimport { HistoryChart } from '../config/api';\nimport { CircularProgress, LinearProgress, ThemeProvider, createTheme } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoCoin = ({\n  coin\n}) => {\n  _s();\n  const [histData, setHistData] = useState();\n  const [days, setDays] = useState(1);\n  const {\n    currency,\n    symbol\n  } = useContext(Cripto);\n  const [loading, setLoading] = useState(false);\n  const fetchHistoryData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(HistoryChart(coin.SYMBOL, days, currency));\n      const data = await response.json();\n      setHistData(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchHistoryData();\n  }, [days, currency]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n  const useStyles = makeStyles(() => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40\n    },\n    lineChart: {\n      width: \"100%\",\n      height: \"300px\" // Ajusta la altura del gráfico según lo necesites\n    }\n  }));\n  const classes = useStyles();\n  useEffect(() => {\n    if (histData && histData.Data && histData.Data.Data) {\n      const chartData = {\n        labels: histData.Data.Data.map(coin => coin.time),\n        // Ajusta según tus datos reales\n        datasets: [{\n          label: 'Precio de la moneda',\n          data: histData.Data.Data.map(coin => coin.close),\n          // Ajusta según tus datos reales\n          backgroundColor: 'rgba(0, 150, 250, 0.2)',\n          borderColor: 'rgba(0, 150, 250, 1)',\n          borderWidth: 1\n        }]\n      };\n      const ctx = document.getElementById('coinChart').getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    }\n  }, [histData]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n        style: {\n          backgroundColor: \"rgb(0, 150, 250)\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), !histData ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: \"rgb(0, 150, 250)\"\n        },\n        size: 250,\n        thickness: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : !histData.Data || !histData.Data.Data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          style: {\n            color: \"rgb(0, 150, 250)\"\n          },\n          size: 250,\n          thickness: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.lineChart,\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"coinChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoCoin, \"eQlUIWGG6Dd4JCfq1VPHJohKhpE=\", true);\n_c = InfoCoin;\nexport default InfoCoin;\n\n// import React, { useState, useEffect } from 'react';\n// import { Chart } from 'chart.js/auto'; // Asegúrate de importar Chart.js correctamente\n// import { HistoryChart } from '../config/api';\n\n// const InfoCoin = ({ coin, currency }) => {\n//   const [data, setData] = useState([]); // Almacena los datos de la API\n//   const [chart, setChart] = useState(null); // Almacena la referencia al gráfico\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(HistoryChart(coin, currency));\n//         const responseData = await response.json();\n//         setData(responseData.data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, [coin, currency]); // Solo coin y currency como dependencias\n//    // coin, currency y chart deben mantenerse como dependencias\n\n//   console.log(coin);\n\n//   return (\n//     <div style={{ width:\"50%\" }}>\n//       <h2 style={{textAlign:\"center\"}}>{coin.SYMBOL}{currency}</h2>\n//         <div style={{textAlign:\"center\"}}>\n//           <h3>Order Book</h3>\n//           <p>Aquí se mostrará información del order book.</p>\n//         </div>\n//     </div>\n//   );\n// };\n\n// export default InfoCoin;\nvar _c;\n$RefreshReg$(_c, \"InfoCoin\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Cripto","HistoryChart","CircularProgress","LinearProgress","ThemeProvider","createTheme","makeStyles","Chart","jsxDEV","_jsxDEV","InfoCoin","coin","_s","histData","setHistData","days","setDays","currency","symbol","loading","setLoading","fetchHistoryData","response","fetch","SYMBOL","data","json","error","console","darkTheme","palette","primary","main","type","useStyles","container","width","display","flexDirection","alignItems","justifyContent","marginTop","padding","lineChart","height","classes","Data","chartData","labels","map","time","datasets","label","close","backgroundColor","borderColor","borderWidth","ctx","document","getElementById","getContext","options","responsive","maintainAspectRatio","theme","children","className","style","fileName","_jsxFileName","lineNumber","columnNumber","color","size","thickness","id","_c","$RefreshReg$"],"sources":["C:/Curso/visualCodeProyectos/crypto-pagev1/crypto-pagev1/src/components/InfoCoin.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Cripto } from '../ContextCripto';\r\nimport { HistoryChart } from '../config/api';\r\nimport { CircularProgress, LinearProgress, ThemeProvider, createTheme } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport  Chart  from 'chart.js/auto';\r\n\r\nconst InfoCoin = ({ coin }) => {\r\n  const [histData, setHistData] = useState();\r\n  const [days, setDays] = useState(1);\r\n  const { currency, symbol } = useContext(Cripto);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchHistoryData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(HistoryChart(coin.SYMBOL, days, currency));\r\n      const data = await response.json();\r\n      setHistData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistoryData();\r\n  }, [days, currency]);\r\n  \r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n  \r\n  const useStyles = makeStyles(() => ({\r\n    container: {\r\n      width: \"75%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      marginTop: 25,\r\n      padding: 40,\r\n    },\r\n    lineChart: {\r\n      width: \"100%\",\r\n      height: \"300px\" // Ajusta la altura del gráfico según lo necesites\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (histData && histData.Data && histData.Data.Data) {\r\n      const chartData = {\r\n        labels: histData.Data.Data.map(coin => coin.time), // Ajusta según tus datos reales\r\n        datasets: [\r\n          {\r\n            label: 'Precio de la moneda',\r\n            data: histData.Data.Data.map(coin => coin.close), // Ajusta según tus datos reales\r\n            backgroundColor: 'rgba(0, 150, 250, 0.2)',\r\n            borderColor: 'rgba(0, 150, 250, 1)',\r\n            borderWidth: 1\r\n          }\r\n        ]\r\n      };\r\n\r\n      const ctx = document.getElementById('coinChart').getContext('2d');\r\n      new Chart(ctx, {\r\n        type: 'line',\r\n        data: chartData,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false\r\n        }\r\n      });\r\n    }\r\n  }, [histData]);\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className={classes.container}>\r\n        {loading && <LinearProgress style={{ backgroundColor: \"rgb(0, 150, 250)\" }} />}\r\n        {!histData ? (\r\n          <CircularProgress style={{ color: \"rgb(0, 150, 250)\"}} size={250} thickness={1} />\r\n        ) : (!histData.Data || !histData.Data.Data ? (\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n            <CircularProgress style={{ color: \"rgb(0, 150, 250)\" }} size={250} thickness={1} />\r\n          </div>\r\n        ) : (\r\n          <div className={classes.lineChart}>\r\n            <canvas id=\"coinChart\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default InfoCoin;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Chart } from 'chart.js/auto'; // Asegúrate de importar Chart.js correctamente\r\n// import { HistoryChart } from '../config/api';\r\n\r\n// const InfoCoin = ({ coin, currency }) => {\r\n//   const [data, setData] = useState([]); // Almacena los datos de la API\r\n//   const [chart, setChart] = useState(null); // Almacena la referencia al gráfico\r\n  \r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await fetch(HistoryChart(coin, currency));\r\n//         const responseData = await response.json();\r\n//         setData(responseData.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     };\r\n  \r\n//     fetchData();\r\n//   }, [coin, currency]); // Solo coin y currency como dependencias\r\n//    // coin, currency y chart deben mantenerse como dependencias\r\n  \r\n//   console.log(coin);\r\n  \r\n//   return (\r\n//     <div style={{ width:\"50%\" }}>\r\n//       <h2 style={{textAlign:\"center\"}}>{coin.SYMBOL}{currency}</h2>\r\n//         <div style={{textAlign:\"center\"}}>\r\n//           <h3>Order Book</h3>\r\n//           <p>Aquí se mostrará información del order book.</p>\r\n//         </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default InfoCoin;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}