{"ast":null,"code":"var _jsxFileName = \"C:\\\\Curso\\\\visualCodeProyectos\\\\crypto-pagev1\\\\crypto-pagev1\\\\src\\\\components\\\\InfoCoin.js\",\n  _s = $RefreshSig$();\n//improvisando ver si se puede colocar un Order book\nimport React, { useState, useEffect } from 'react';\nimport { Chart } from 'chart.js/auto';\nimport { HistoryChart } from '../config/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoCoin = coin => {\n  _s();\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    const response = await fetch(HistoryChart(coin));\n    const responseData = await response.json();\n    setData(responseData.data);\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, [coin]);\n  console.log(HistoryChart);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"50%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: coin.SYMBOL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Order Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aqu\\xED se mostrar\\xE1 informaci\\xF3n del order book.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoCoin, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = InfoCoin;\nexport default InfoCoin;\n\n// BASICO BASICO mostrando informacion total de coin\n// import React, { useState, useEffect } from 'react';\n// import { Chart } from 'chart.js/auto'; // Asegúrate de importar Chart.js correctamente\n// import { HistoryChart } from '../config/api';\n\n// const InfoCoin = ({ coin, currency }) => {\n//   const [data, setData] = useState([]); // Almacena los datos de la API\n//   const [chart, setChart] = useState(null); // Almacena la referencia al gráfico\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(HistoryChart(coin, currency));\n//         const responseData = await response.json();\n//         setData(responseData.data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, [coin, currency]); // Solo coin y currency como dependencias\n//    // coin, currency y chart deben mantenerse como dependencias\n\n//   console.log(coin);\n\n//   return (\n//     <div style={{ width:\"50%\" }}>\n//       <h2 style={{textAlign:\"center\"}}>{coin.SYMBOL}{currency}</h2>\n//         <div style={{textAlign:\"center\"}}>\n//           <h3>Order Book</h3>\n//           <p>Aquí se mostrará información del order book.</p>\n//         </div>\n//     </div>\n//   );\n// };\n\n// export default InfoCoin;\n\n//EL DEL INDU problemas con el react-chartjs2\n// import React, { useContext, useEffect, useState } from 'react';\n// import { Cripto } from '../ContextCripto';\n// import { HistoryChart } from '../config/api';\n// import { CircularProgress, LinearProgress, ThemeProvider, createTheme } from '@mui/material';\n// import { makeStyles } from '@mui/styles';\n// import  Chart  from 'chart.js/auto';\n\n// const InfoCoin = ({ coin }) => {\n//   const [histData, setHistData] = useState();\n//   const [days, setDays] = useState(1);\n//   const { currency, symbol } = useContext(Cripto);\n//   const [loading, setLoading] = useState(false);\n\n//   const fetchHistoryData = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(HistoryChart(coin.SYMBOL, days, currency));\n//       const data = await response.json();\n//       setHistData(data);\n//     } catch (error) {\n//       console.error('Error fetching data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchHistoryData();\n//   }, [days, currency]);\n\n//   const darkTheme = createTheme({\n//     palette: {\n//       primary: {\n//         main: \"#fff\",\n//       },\n//       type: \"dark\",\n//     },\n//   });\n\n//   const useStyles = makeStyles(() => ({\n//     container: {\n//       width: \"75%\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//       marginTop: 25,\n//       padding: 40,\n//     },\n//     lineChart: {\n//       width: \"100%\",\n//       height: \"300px\" // Ajusta la altura del gráfico según lo necesites\n//     }\n//   }));\n\n//   const classes = useStyles();\n\n//   useEffect(() => {\n//     if (histData && histData.Data && histData.Data.Data) {\n//       const chartData = {\n//         labels: histData.Data.Data.map(coin => coin.time), // Ajusta según tus datos reales\n//         datasets: [\n//           {\n//             label: 'Precio de la moneda',\n//             data: histData.Data.Data.map(coin => coin.close), // Ajusta según tus datos reales\n//             backgroundColor: 'rgba(0, 150, 250, 0.2)',\n//             borderColor: 'rgba(0, 150, 250, 1)',\n//             borderWidth: 1\n//           }\n//         ]\n//       };\n\n//       const ctx = document.getElementById('coinChart').getContext('2d');\n//       new Chart(ctx, {\n//         type: 'line',\n//         data: chartData,\n//         options: {\n//           responsive: true,\n//           maintainAspectRatio: false\n//         }\n//       });\n//     }\n//   }, [histData]);\n\n//   return (\n//     <ThemeProvider theme={darkTheme}>\n//       <div className={classes.container}>\n//         {loading && <LinearProgress style={{ backgroundColor: \"rgb(0, 150, 250)\" }} />}\n//         {!histData ? (\n//           <CircularProgress style={{ color: \"rgb(0, 150, 250)\"}} size={250} thickness={1} />\n//         ) : (!histData.Data || !histData.Data.Data ? (\n//           <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n//             <CircularProgress style={{ color: \"rgb(0, 150, 250)\" }} size={250} thickness={1} />\n//           </div>\n//         ) : (\n//           <div className={classes.lineChart}>\n//             <canvas id=\"coinChart\" />\n//           </div>\n//         ))}\n//       </div>\n//     </ThemeProvider>\n//   );\n// };\n\n// export default InfoCoin;\nvar _c;\n$RefreshReg$(_c, \"InfoCoin\");","map":{"version":3,"names":["React","useState","useEffect","Chart","HistoryChart","jsxDEV","_jsxDEV","InfoCoin","coin","_s","data","setData","fetchData","response","fetch","responseData","json","console","log","style","width","children","textAlign","SYMBOL","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Curso/visualCodeProyectos/crypto-pagev1/crypto-pagev1/src/components/InfoCoin.js"],"sourcesContent":["\r\n//improvisando ver si se puede colocar un Order book\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Chart } from 'chart.js/auto'; \r\nimport { HistoryChart } from '../config/api';\r\n\r\nconst InfoCoin = (coin) => {\r\n  const [data, setData] = useState([]); \r\n  \r\n  const fetchData = async () => {\r\n    const response = await fetch(HistoryChart(coin));\r\n    const responseData = await response.json();\r\n    setData(responseData.data);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line\r\n  }, [coin]); \r\n  \r\n  console.log(HistoryChart);\r\n  \r\n  return (\r\n    <div style={{ width:\"50%\" }}>\r\n      <h2 style={{textAlign:\"center\"}}>{coin.SYMBOL}</h2>\r\n        <div style={{textAlign:\"center\"}}>\r\n          <h3>Order Book</h3>\r\n          <p>Aquí se mostrará información del order book.</p>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCoin;\r\n\r\n\r\n\r\n// BASICO BASICO mostrando informacion total de coin\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Chart } from 'chart.js/auto'; // Asegúrate de importar Chart.js correctamente\r\n// import { HistoryChart } from '../config/api';\r\n\r\n// const InfoCoin = ({ coin, currency }) => {\r\n//   const [data, setData] = useState([]); // Almacena los datos de la API\r\n//   const [chart, setChart] = useState(null); // Almacena la referencia al gráfico\r\n  \r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await fetch(HistoryChart(coin, currency));\r\n//         const responseData = await response.json();\r\n//         setData(responseData.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     };\r\n  \r\n//     fetchData();\r\n//   }, [coin, currency]); // Solo coin y currency como dependencias\r\n//    // coin, currency y chart deben mantenerse como dependencias\r\n  \r\n//   console.log(coin);\r\n  \r\n//   return (\r\n//     <div style={{ width:\"50%\" }}>\r\n//       <h2 style={{textAlign:\"center\"}}>{coin.SYMBOL}{currency}</h2>\r\n//         <div style={{textAlign:\"center\"}}>\r\n//           <h3>Order Book</h3>\r\n//           <p>Aquí se mostrará información del order book.</p>\r\n//         </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default InfoCoin;\r\n\r\n//EL DEL INDU problemas con el react-chartjs2\r\n// import React, { useContext, useEffect, useState } from 'react';\r\n// import { Cripto } from '../ContextCripto';\r\n// import { HistoryChart } from '../config/api';\r\n// import { CircularProgress, LinearProgress, ThemeProvider, createTheme } from '@mui/material';\r\n// import { makeStyles } from '@mui/styles';\r\n// import  Chart  from 'chart.js/auto';\r\n\r\n// const InfoCoin = ({ coin }) => {\r\n//   const [histData, setHistData] = useState();\r\n//   const [days, setDays] = useState(1);\r\n//   const { currency, symbol } = useContext(Cripto);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const fetchHistoryData = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(HistoryChart(coin.SYMBOL, days, currency));\r\n//       const data = await response.json();\r\n//       setHistData(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching data:', error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchHistoryData();\r\n//   }, [days, currency]);\r\n  \r\n//   const darkTheme = createTheme({\r\n//     palette: {\r\n//       primary: {\r\n//         main: \"#fff\",\r\n//       },\r\n//       type: \"dark\",\r\n//     },\r\n//   });\r\n  \r\n//   const useStyles = makeStyles(() => ({\r\n//     container: {\r\n//       width: \"75%\",\r\n//       display: \"flex\",\r\n//       flexDirection: \"column\",\r\n//       alignItems: \"center\",\r\n//       justifyContent: \"center\",\r\n//       marginTop: 25,\r\n//       padding: 40,\r\n//     },\r\n//     lineChart: {\r\n//       width: \"100%\",\r\n//       height: \"300px\" // Ajusta la altura del gráfico según lo necesites\r\n//     }\r\n//   }));\r\n\r\n//   const classes = useStyles();\r\n\r\n//   useEffect(() => {\r\n//     if (histData && histData.Data && histData.Data.Data) {\r\n//       const chartData = {\r\n//         labels: histData.Data.Data.map(coin => coin.time), // Ajusta según tus datos reales\r\n//         datasets: [\r\n//           {\r\n//             label: 'Precio de la moneda',\r\n//             data: histData.Data.Data.map(coin => coin.close), // Ajusta según tus datos reales\r\n//             backgroundColor: 'rgba(0, 150, 250, 0.2)',\r\n//             borderColor: 'rgba(0, 150, 250, 1)',\r\n//             borderWidth: 1\r\n//           }\r\n//         ]\r\n//       };\r\n\r\n//       const ctx = document.getElementById('coinChart').getContext('2d');\r\n//       new Chart(ctx, {\r\n//         type: 'line',\r\n//         data: chartData,\r\n//         options: {\r\n//           responsive: true,\r\n//           maintainAspectRatio: false\r\n//         }\r\n//       });\r\n//     }\r\n//   }, [histData]);\r\n\r\n//   return (\r\n//     <ThemeProvider theme={darkTheme}>\r\n//       <div className={classes.container}>\r\n//         {loading && <LinearProgress style={{ backgroundColor: \"rgb(0, 150, 250)\" }} />}\r\n//         {!histData ? (\r\n//           <CircularProgress style={{ color: \"rgb(0, 150, 250)\"}} size={250} thickness={1} />\r\n//         ) : (!histData.Data || !histData.Data.Data ? (\r\n//           <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n//             <CircularProgress style={{ color: \"rgb(0, 150, 250)\" }} size={250} thickness={1} />\r\n//           </div>\r\n//         ) : (\r\n//           <div className={classes.lineChart}>\r\n//             <canvas id=\"coinChart\" />\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </ThemeProvider>\r\n//   );\r\n// };\r\n\r\n// export default InfoCoin;"],"mappings":";;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,YAAY,CAACI,IAAI,CAAC,CAAC;IAChD,MAAMO,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1CL,OAAO,CAACI,YAAY,CAACL,IAAI,CAAC;EAC5B,CAAC;EAGDR,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;IACX;EACF,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEVS,OAAO,CAACC,GAAG,CAACd,YAAY,CAAC;EAEzB,oBACEE,OAAA;IAAKa,KAAK,EAAE;MAAEC,KAAK,EAAC;IAAM,CAAE;IAAAC,QAAA,gBAC1Bf,OAAA;MAAIa,KAAK,EAAE;QAACG,SAAS,EAAC;MAAQ,CAAE;MAAAD,QAAA,EAAEb,IAAI,CAACe;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjDrB,OAAA;MAAKa,KAAK,EAAE;QAACG,SAAS,EAAC;MAAQ,CAAE;MAAAD,QAAA,gBAC/Bf,OAAA;QAAAe,QAAA,EAAI;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBrB,OAAA;QAAAe,QAAA,EAAG;MAA4C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1BIF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA4Bd,eAAeA,QAAQ;;AAIvqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}