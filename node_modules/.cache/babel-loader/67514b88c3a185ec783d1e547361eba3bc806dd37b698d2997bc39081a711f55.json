{"ast":null,"code":"var _jsxFileName = \"C:\\\\Curso\\\\visualCodeProyectos\\\\crypto-pagev1\\\\crypto-pagev1\\\\src\\\\components\\\\InfoCoin.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Cripto } from '../ContextCripto';\nimport { HistoryChart } from '../config/api';\nimport { LinearProgress, createTheme } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoCoin = ({\n  coin\n}) => {\n  _s();\n  const [histData, setHistData] = useState();\n  const [days, setDays] = useState(1);\n  const {\n    currency,\n    symbol\n  } = useContext(Cripto);\n  const [loading, setLoading] = useState(false);\n  const fetchHistoryData = async () => {\n    setLoading(true); // Marcar como cargando antes de hacer la solicitud\n    try {\n      const response = await fetch(HistoryChart(coin.SYMBOL, days, currency));\n      const data = await response.json();\n      setHistData(data);\n    } catch (error) {\n      console.error('Error fetching la data:', error);\n      // Aquí puedes manejar el error de la manera que desees\n    } finally {\n      setLoading(false); // Marcar como no cargando después de la solicitud, independientemente del resultado\n    }\n  };\n  useEffect(() => {\n    fetchHistoryData();\n    // eslint-disable-next-line\n  }, [days, currency]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#ff\"\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"InfoCoin\", loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n      style: {\n        backgroundColor: \"rgb(0, 150, 250)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoCoin, \"/QMoFn9nEQhFBA8VpqHtXOJnzmY=\");\n_c = InfoCoin;\nexport default InfoCoin;\nvar _c;\n$RefreshReg$(_c, \"InfoCoin\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Cripto","HistoryChart","LinearProgress","createTheme","jsxDEV","_jsxDEV","InfoCoin","coin","_s","histData","setHistData","days","setDays","currency","symbol","loading","setLoading","fetchHistoryData","response","fetch","SYMBOL","data","json","error","console","darkTheme","palette","primary","main","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Curso/visualCodeProyectos/crypto-pagev1/crypto-pagev1/src/components/InfoCoin.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { Cripto } from '../ContextCripto';\r\nimport { HistoryChart } from '../config/api';\r\nimport { LinearProgress, createTheme } from '@mui/material';\r\n\r\nconst InfoCoin = ({coin}) => {\r\n  const [histData, setHistData] = useState();\r\n  const [days, setDays] = useState(1);\r\n  const { currency, symbol } = useContext(Cripto);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const fetchHistoryData = async () => {\r\n    setLoading(true); // Marcar como cargando antes de hacer la solicitud\r\n    try {\r\n      const response = await fetch(HistoryChart(coin.SYMBOL, days, currency));\r\n      const data = await response.json();\r\n      setHistData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching la data:', error);\r\n      // Aquí puedes manejar el error de la manera que desees\r\n    } finally {\r\n      setLoading(false); // Marcar como no cargando después de la solicitud, independientemente del resultado\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistoryData();\r\n    // eslint-disable-next-line\r\n  }, [days, currency]);\r\n  \r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main:\"#ff\"\r\n      }\r\n    }\r\n  })\r\n  return (\r\n    <div>\r\n      InfoCoin\r\n      {loading && <LinearProgress style={{ backgroundColor: \"rgb(0, 150, 250)\" }} />} {/* Mostrar barra de progreso si está cargando */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoCoin;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,cAAc,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,QAAQ,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM;IAAEc,QAAQ;IAAEC;EAAO,CAAC,GAAGjB,UAAU,CAACG,MAAM,CAAC;EAC/C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAG7C,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAClB,YAAY,CAACM,IAAI,CAACa,MAAM,EAAET,IAAI,EAAEE,QAAQ,CAAC,CAAC;MACvE,MAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCZ,WAAW,CAACW,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdmB,gBAAgB,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACN,IAAI,EAAEE,QAAQ,CAAC,CAAC;EAEpB,MAAMY,SAAS,GAAGtB,WAAW,CAAC;IAC5BuB,OAAO,EAAE;MACPC,OAAO,EAAE;QACPC,IAAI,EAAC;MACP;IACF;EACF,CAAC,CAAC;EACF,oBACEvB,OAAA;IAAAwB,QAAA,GAAK,UAEH,EAACd,OAAO,iBAAIV,OAAA,CAACH,cAAc;MAAC4B,KAAK,EAAE;QAAEC,eAAe,EAAE;MAAmB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEV,CAAC;AAAA3B,EAAA,CAvCKF,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}